syntax="proto3";
package sessionNegotiation;

service SessionNegotiationBroker{
  rpc RequestSessionNegotiation(RequestSN) returns (ResultSN) {}
  rpc AckSessionNegotiation(Ack) returns (Null) {}
}

message EndPoint {
  string ip = 1;
  int32 port = 2;
}

message SessionDescription {
  string session_creator = 1;
  string session_id = 2;
}

message DatamapDescription {
  repeated string sync_interest_list = 1;
  string data_catalog_vocab = 2;
}

message SynchronizationDescription {
  repeated int32 sync_time = 1;
  repeated int32 sync_count = 2;
  repeated string transfer_interface = 3;
}

message SessionNegotiation {
  DatamapDescription datamap_desc = 1;
  SynchronizationDescription sync_desc = 2;
}

message RequestSN {
  SessionDescription session_desc = 1;
  SessionNegotiation sn_options = 2;
}

message ResultSN {
  bool status = 1;
  EndPoint end_point = 2;
  SessionDescription session_desc = 3;
  SessionNegotiation sn_options = 4;
}

message Ack {
  bool status = 1;
  EndPoint end_point = 2;
}

message Null {
}
